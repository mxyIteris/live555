184,185d183
< #define MAX_SESSIONS 12
< int totalsockets=0;
189,201c187,197
< 	
< 	int clientSocket = accept(serverSocket, (struct sockaddr*)&clientAddr, &clientAddrLen);
< 	if (clientSocket < 0) {
<     	int err = envir().getErrno();
<     	if (err != EWOULDBLOCK) {
<     		envir().setResultErrMsg("accept() failed: ");
< 	}
<     	return;
< 	}
< 
< 	ignoreSigPipeOnSocket(clientSocket); // so that clients on the same host that are killed don't also kill us
< 	makeSocketNonBlocking(clientSocket);
< 	increaseSendBufferTo(envir(), clientSocket, 50*1024);
---
>   int clientSocket = accept(serverSocket, (struct sockaddr*)&clientAddr, &clientAddrLen);
>   if (clientSocket < 0) {
>     int err = envir().getErrno();
>     if (err != EWOULDBLOCK) {
>       envir().setResultErrMsg("accept() failed: ");
>     }
>     return;
>   }
>   ignoreSigPipeOnSocket(clientSocket); // so that clients on the same host that are killed don't also kill us
>   makeSocketNonBlocking(clientSocket);
>   increaseSendBufferTo(envir(), clientSocket, 50*1024);
224,234d219
< 
< 
< //	printf("TOTALSOCKETS:%d !!!!!!!!!!!!!!!!!!!!!!\n",totalsockets);
<   	if(clientAddr.sin_addr.s_addr != 0x2c8a8c0) {   //192.168.200.2
< 		totalsockets++;
< 		if(totalsockets > MAX_SESSIONS) {
<   			fOurServer.fClientConnections->Remove((char const*)this);
<  			closeSockets();
< 		}
< 	}
< 
239a225
>   
245d230
< 
247,251c232
<   	if (fOurSocket>= 0){
< 	 ::closeSocket(fOurSocket);
< 		if(fClientAddr.sin_addr.s_addr != 0x2c8a8c0)
< 			totalsockets--;
< 	}
---
>   if (fOurSocket>= 0) ::closeSocket(fOurSocket);
